{% extends 'layout.twig' %}

{% import _self as faker %}

{% macro link_to_image(route, parameters) %}
{% set values = [] %}
{% if route == "font" %}
{% set values = values|merge([ parameters.color]) %}
{% endif %}
{% if route in ["font", "background"] %}
{% set values = values|merge([ parameters.background ]) %}
{% endif %}
{% set values = values|merge([ parameters.size ~ "." ~ parameters.extension ]) %}
<a href="{{ url(route, parameters) }}">/{{ values|join("/")  }}</a>
{% endmacro %}

{% set paramsBasic = { background: "6d3353", size: "250x100", extension: "png" } %}
{% set paramsWidthHeight = {size: "300x150", extension: "png"} %}
{% set paramsWidth = {size: "300", extension: "png"} %}
{% set paramsExtension = {size: "300", extension: "jpg"} %}
{% set paramsBackground = {background: "6d3353", size: "300x150", extension: "png"} %}
{% set paramsFont = {color: "ffff00", background: "555555", size: "300x150", extension: "png"} %}
{% set paramsNtsc = {size: "ntsc", extension: "jpg"} %}

{% block content %}

    <section id="description">
        <div class="page-header">
            <h1>Description</h1>
        </div>

        <p>Image Faker is a web app built to generate images dynamically, using simple urls.</p>

        <div class="row-fluid example">
            <div class="span2">
                <p class="generates">The url:</p>
            </div>
            <div class="span4">
                <pre class="basic-example">{{ faker.link_to_image("background", paramsBasic) }}</pre>
            </div>
            <div class="span1">
                <p class="generates">generates</p>
            </div>
            <div class="span5">
                <img class="" src="{{ url("background", paramsBasic) }}">
            </div>
        </div>

    </section>

    <section id="param">
        <div class="page-header">
            <h1>Parameters</h1>
        </div>
        <dl class="dl-horizontal">
            <dt>Image size</dt>
            <dd>You can define the width and height of the image in pixels, separated with <code>x</code>.
                The maximum value for both is {{ maxSize }}.
                <pre>{{ faker.link_to_image("simple", paramsWidthHeight) }}</pre>
            </dd>

            <dd>Height is optional. If not defined, it will be equal to width.
                <pre>{{ faker.link_to_image("simple", paramsWidth) }}</pre>
            </dd>

            <dd>Some standard sizes are available (<code>{{ defaultSizes|keys|join(', ') }}</code>).
                <pre>{{ faker.link_to_image("simple", paramsNtsc) }}</pre>
            </dd>

            <dt>Extension</dt>
            <dd>It can be <code>jpg</code>, <code>png</code> or <code>gif</code>.
                <pre>{{ faker.link_to_image("simple", paramsExtension) }}</pre>
            </dd>

            <dt>Background color</dt>
            <dd>Optional. Hexadecimal code, 6 (or 3) characters. The default color is <code>000000</code> (black).
                <pre>{{ faker.link_to_image("background", paramsBackground) }}</pre>
            </dd>

            <dt>Font color</dt>
            <dd>Optional. Hexadecimal code, 6 (or 3) characters. If not defined, it's automatically calculated
                to contrast with the background color.
                <pre>{{ faker.link_to_image("font", paramsFont) }}</pre>
            </dd>
        </dl>

        <h2>Standard image sizes</h2>
        <p>To ease image creation, some standard sizes are available:</p>

        <ul class="">{% for key,value in defaultSizes %}
            <li>{{ key }}: <code>{{ value }}</code></li>
        {% endfor %}</ul>

        <h2>HTTP cache</h2>
        <p>Creating images dinamically is an "complex" task executed by the server. If images are too big or a
            lot of requests are made at the same time, the overhead can become a problem. Luckily HTTP cache is here to
            help, storing responses temporarily and improving communication between users and server.</p>
    </section>

    <section id="code">
        <div class="page-header">
            <h1>Code</h1>
        </div>
        <p>You can <a href="https://github.com/rmhdev/Image-Faker">view and fork the code on GitHub</a>.
            Your pull requests and issues are welcome! I started this project with some goals in mind:</p>
        <ul>
            <li>Practice <a href="http://c2.com/cgi/wiki?TestDrivenDevelopment">TDD</a>.</li>
            <li>Play with <a href="http://getcomposer.org/">Composer</a> and <a href="http://git-scm.com/">Git</a>.</li>
            <li>Try to write good code ;-)</li>
        </ul>

        <p>Image Faker uses <a href="http://silex.sensiolabs.org/">Silex</a>, a PHP microframework created by
            <a href="http://fabien.potencier.org/">Fabien Potencier</a> and
            <a href="https://igor.io/">Igor Wiedler</a>.
            The images are generated using <a href="http://imagine.readthedocs.org/">Imagine</a>, a PHP library for
            image manipulation created by <a href="http://avalanche123.com/">Bulat Shakirzyanov</a>.</p>

    </section>

    <section id="license">
        <div class="page-header">
            <h1>License</h1>
        </div>

        <p>Image Faker's code is under the open-source
            <a href="http://opensource.org/licenses/MIT">MIT License</a>. The documentation is under Creative Commons
            Attribution 3.0 Unported (<a href="http://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>).
        </p>

        <p>This project is inspired in <a href="http://dummyimage.com/">Dynamic Dummy Image Generator</a> by
            <a href="http://www.russellheimlich.com/blog/">Russell Heimlich</a>.</p>
    </section>

    <section id="change-log">
        <div class="page-header">
            <h1>Change log</h1>
        </div>

        <ul>
            <li><code>1.3.0</code> (July XX, 2013): added HTTP cache.</li>
            <li><code>1.2.0</code> (Juny 23, 2013): font color can be defined.</li>
            <li><code>1.1.0</code> (Juny 22, 2013): added first standard image sizes
               (<abbr class="initialism" title="720x480">NTSC</abbr>,
                <abbr class="initialism" title="768x576">PAL</abbr>,
                <abbr class="initialism" title="1280x720">HD720</abbr> and
                <abbr class="initialism" title="1920x1080">HD1080</abbr>).</li>
            <li><code>1.0.0</code> (Juny 9, 2013): initial release.</li>
        </ul>
    </section>

    <section id="road-map">
        <div class="page-header">
            <h1>Road map</h1>
        </div>

        <ul>
            <li>Personalize default values in a config file.</li>
            <li>Work with <code>Imagick</code> and <code>Gmagick</code> (actually only works with <code>GD</code>).</li>
            <li>Draw an icon instead of text.</li>
            <li>Info about colors when no image is requested.</li>
        </ul>
    </section>

    <section id="author">
        <div class="page-header">
            <h1>Author</h1>
        </div>
        <p>My name is Rober Martín H (<a href="http://twitter.com/rmhdev">@rmhdev</a>). I'm a developer from Donostia / San Sebastián.</p>
    </section>

{% endblock %}
